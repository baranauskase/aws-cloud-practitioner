AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  This stack is used for deploying EC2 resources in preparation for AWS Cloud Practitioner Course

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: dev

  KeyPairPublicKeyMaterial:
    Description: Please specify the public key material for SSH authentication
    Type: String

  DeployHelloWorldBaseInstance:
    Description: Please specify if Hello World instance should be deployed
    Type: String
    Default: false
    AllowedValues:
      - true
      - false

  HelloWorldInstanceAMI:
    Description: Please specify Hello World instance AMI
    Type: String
    Default: ""

Mappings:
  RegionMap:
    eu-west-2:
      AMI: ami-0648ea225c13e0729

Conditions:
  DeployHelloWorldBaseInstanceIsTrue: !Equals
    - !Ref DeployHelloWorldBaseInstance
    - true
  DeployHelloWorldInstanceIsTrue: !Not
    - !Equals
      - !Ref HelloWorldInstanceAMI
      - ""

Resources:
  # Start of Security Groups

  HelloWorldAlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the API
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
        - Description: "Access from VPC"
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} application load balancer SG

  HelloWorldInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Manages firewall for Demo EC2 instance
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref HelloWorldAlbSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Instance SG

  # End of Security Groups

  # Start of IAM Roles

  HelloWorldRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  HelloWorldRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "root"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "iam:ListUsers"
            Resource: "*"
      Roles:
        - !Ref HelloWorldRole

  HelloWorldInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref HelloWorldRole

  # End of IAM Roles

  # Start of EC2 Instances

  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: hello-world-instance-key
      KeyType: rsa
      PublicKeyMaterial: !Ref KeyPairPublicKeyMaterial

  # Replaced by ASG
  # HelloWorldBaseInstance:
  #   Type: AWS::EC2::Instance
  #   Condition: DeployHelloWorldBaseInstanceIsTrue
  #   Properties:
  #     InstanceType: "t2.micro"
  #     ImageId:
  #       Fn::FindInMap:
  #         - "RegionMap"
  #         - Ref: "AWS::Region"
  #         - "AMI"
  #     KeyName: !Ref KeyPair
  #     NetworkInterfaces:
  #       - AssociatePublicIpAddress: false
  #         DeviceIndex: 0
  #         GroupSet:
  #           - !Ref HelloWorldInstanceSecurityGroup
  #         SubnetId: !ImportValue PrivateSubnet1
  #     UserData: !Base64
  #       "Fn::Sub": |
  #         #!/bin/bash
  #         set -o xtrace
  #         yum update -y
  #         yum install -y httpd
  #         systemctl start httpd
  #         systemctl enable httpd
  #     IamInstanceProfile: !Ref HelloWorldInstanceProfile
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${EnvironmentName} Base Instance

  HelloWorldInstance:
    Type: AWS::EC2::Instance
    Condition: DeployHelloWorldInstanceIsTrue
    Properties:
      InstanceType: "t2.micro"
      ImageId: !Ref HelloWorldInstanceAMI
      KeyName: !Ref KeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !Ref HelloWorldInstanceSecurityGroup
          SubnetId: !ImportValue PrivateSubnet1
      UserData: !Base64
        "Fn::Sub": |
          #!/bin/bash
          set -o xtrace
          echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html
      IamInstanceProfile: !Ref HelloWorldInstanceProfile
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Instance

  # End of EC2 Instances

  # Start of EBS Volumes

  HelloWorldVolume:
    Type: AWS::EC2::Volume
    Condition: DeployHelloWorldInstanceIsTrue
    DeletionPolicy: Delete
    Properties:
      Size: 20
      VolumeType: gp2
      Encrypted: true
      AvailabilityZone: !GetAtt HelloWorldInstance.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} volume

  HelloWorldVolumeAttachment:
    Type: AWS::EC2::VolumeAttachment
    Condition: DeployHelloWorldInstanceIsTrue
    Properties:
      Device: /dev/xvdf
      InstanceId: !Ref HelloWorldInstance
      VolumeId: !Ref HelloWorldVolume

  # End of EBS Volumes

  # Start of Load Balancing

  HelloWorldAlb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Condition: DeployHelloWorldBaseInstanceIsTrue
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref HelloWorldAlbSecurityGroup
      Subnets:
        - !ImportValue PublicSubnet1
        - !ImportValue PublicSubnet2
      Type: application

  HelloWorldTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: DeployHelloWorldBaseInstanceIsTrue
    Properties:
      HealthCheckEnabled: true
      TargetType: instance
      VpcId: !ImportValue VPC
      Protocol: HTTP
      Port: 80
      # Replaced by ASG
      # Targets:
      #   - Id: !Ref HelloWorldBaseInstance

  HelloWorldAlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: DeployHelloWorldBaseInstanceIsTrue
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref HelloWorldTargetGroup
      LoadBalancerArn: !Ref HelloWorldAlb
      Port: 80
      Protocol: HTTP

  HelloWorldBaseTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
      LaunchTemplateData:
        InstanceType: "t2.micro"
        ImageId:
          Fn::FindInMap:
            - "RegionMap"
            - Ref: "AWS::Region"
            - "AMI"
        KeyName: !Ref KeyPair
        NetworkInterfaces:
          - AssociatePublicIpAddress: false
            DeviceIndex: 0
            Groups:
              - !Ref HelloWorldInstanceSecurityGroup
        UserData: !Base64
          "Fn::Sub": |
            #!/bin/bash
            set -o xtrace
            yum update -y
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
        IamInstanceProfile:
          Name: !Ref HelloWorldInstanceProfile

  HelloWorldAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Condition: DeployHelloWorldBaseInstanceIsTrue
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref HelloWorldBaseTemplate
        Version: !GetAtt HelloWorldBaseTemplate.LatestVersionNumber
      MaxSize: "2"
      MinSize: "0"
      DesiredCapacity: "2"
      TargetGroupARNs:
        - !Ref HelloWorldTargetGroup
      VPCZoneIdentifier:
        - !ImportValue PrivateSubnet1
        - !ImportValue PrivateSubnet2

  # End of Load Balancing
